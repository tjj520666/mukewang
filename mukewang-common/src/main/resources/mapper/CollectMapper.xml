<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.CollectMapper">
  <resultMap id="BaseResultMap" type="com.entity.Collect">
    <id column="collect_id" jdbcType="INTEGER" property="collectId" />
    <result column="collect_uid" jdbcType="INTEGER" property="collectUid" />
    <result column="collect_mvid" jdbcType="INTEGER" property="collectMvid" />
    <result column="collect_createtime" jdbcType="TIMESTAMP" property="collectCreatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    collect_id, collect_uid, collect_mvid, collect_createtime
  </sql>
  <select id="selectByExample" parameterType="com.entity.CollectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from muke_collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from muke_collect
    where collect_id = #{collectId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from muke_collect
    where collect_id = #{collectId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.entity.CollectExample">
    delete from muke_collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.entity.Collect">
    insert into muke_collect (collect_id, collect_uid, collect_mvid, 
      collect_createtime)
    values (#{collectId,jdbcType=INTEGER}, #{collectUid,jdbcType=INTEGER}, #{collectMvid,jdbcType=INTEGER}, 
      #{collectCreatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Collect">
    insert into muke_collect
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collectId != null">
        collect_id,
      </if>
      <if test="collectUid != null">
        collect_uid,
      </if>
      <if test="collectMvid != null">
        collect_mvid,
      </if>
      <if test="collectCreatetime != null">
        collect_createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collectId != null">
        #{collectId,jdbcType=INTEGER},
      </if>
      <if test="collectUid != null">
        #{collectUid,jdbcType=INTEGER},
      </if>
      <if test="collectMvid != null">
        #{collectMvid,jdbcType=INTEGER},
      </if>
      <if test="collectCreatetime != null">
        #{collectCreatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.CollectExample" resultType="java.lang.Long">
    select count(*) from muke_collect
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update muke_collect
    <set>
      <if test="record.collectId != null">
        collect_id = #{record.collectId,jdbcType=INTEGER},
      </if>
      <if test="record.collectUid != null">
        collect_uid = #{record.collectUid,jdbcType=INTEGER},
      </if>
      <if test="record.collectMvid != null">
        collect_mvid = #{record.collectMvid,jdbcType=INTEGER},
      </if>
      <if test="record.collectCreatetime != null">
        collect_createtime = #{record.collectCreatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update muke_collect
    set collect_id = #{record.collectId,jdbcType=INTEGER},
      collect_uid = #{record.collectUid,jdbcType=INTEGER},
      collect_mvid = #{record.collectMvid,jdbcType=INTEGER},
      collect_createtime = #{record.collectCreatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Collect">
    update muke_collect
    <set>
      <if test="collectUid != null">
        collect_uid = #{collectUid,jdbcType=INTEGER},
      </if>
      <if test="collectMvid != null">
        collect_mvid = #{collectMvid,jdbcType=INTEGER},
      </if>
      <if test="collectCreatetime != null">
        collect_createtime = #{collectCreatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Collect">
    update muke_collect
    set collect_uid = #{collectUid,jdbcType=INTEGER},
      collect_mvid = #{collectMvid,jdbcType=INTEGER},
      collect_createtime = #{collectCreatetime,jdbcType=TIMESTAMP}
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
</mapper>