<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.CourseMapper">
  <resultMap id="BaseResultMap" type="com.entity.Course">
    <id column="usection_id" jdbcType="INTEGER" property="usectionId" />
    <result column="usection_uid" jdbcType="INTEGER" property="usectionUid" />
    <result column="usection_mvid" jdbcType="INTEGER" property="usectionMvid" />
    <result column="usection_sectionid" jdbcType="INTEGER" property="usectionSectionid" />
    <result column="usection_status" jdbcType="INTEGER" property="usectionStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    usection_id, usection_uid, usection_mvid, usection_sectionid, usection_status
  </sql>
  <select id="selectByExample" parameterType="com.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from muke_user_course_section
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from muke_user_course_section
    where usection_id = #{usectionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from muke_user_course_section
    where usection_id = #{usectionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.entity.CourseExample">
    delete from muke_user_course_section
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.entity.Course">
    insert into muke_user_course_section (usection_id, usection_uid, usection_mvid, 
      usection_sectionid, usection_status)
    values (#{usectionId,jdbcType=INTEGER}, #{usectionUid,jdbcType=INTEGER}, #{usectionMvid,jdbcType=INTEGER}, 
      #{usectionSectionid,jdbcType=INTEGER}, #{usectionStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Course">
    insert into muke_user_course_section
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="usectionId != null">
        usection_id,
      </if>
      <if test="usectionUid != null">
        usection_uid,
      </if>
      <if test="usectionMvid != null">
        usection_mvid,
      </if>
      <if test="usectionSectionid != null">
        usection_sectionid,
      </if>
      <if test="usectionStatus != null">
        usection_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="usectionId != null">
        #{usectionId,jdbcType=INTEGER},
      </if>
      <if test="usectionUid != null">
        #{usectionUid,jdbcType=INTEGER},
      </if>
      <if test="usectionMvid != null">
        #{usectionMvid,jdbcType=INTEGER},
      </if>
      <if test="usectionSectionid != null">
        #{usectionSectionid,jdbcType=INTEGER},
      </if>
      <if test="usectionStatus != null">
        #{usectionStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.CourseExample" resultType="java.lang.Long">
    select count(*) from muke_user_course_section
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update muke_user_course_section
    <set>
      <if test="record.usectionId != null">
        usection_id = #{record.usectionId,jdbcType=INTEGER},
      </if>
      <if test="record.usectionUid != null">
        usection_uid = #{record.usectionUid,jdbcType=INTEGER},
      </if>
      <if test="record.usectionMvid != null">
        usection_mvid = #{record.usectionMvid,jdbcType=INTEGER},
      </if>
      <if test="record.usectionSectionid != null">
        usection_sectionid = #{record.usectionSectionid,jdbcType=INTEGER},
      </if>
      <if test="record.usectionStatus != null">
        usection_status = #{record.usectionStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update muke_user_course_section
    set usection_id = #{record.usectionId,jdbcType=INTEGER},
      usection_uid = #{record.usectionUid,jdbcType=INTEGER},
      usection_mvid = #{record.usectionMvid,jdbcType=INTEGER},
      usection_sectionid = #{record.usectionSectionid,jdbcType=INTEGER},
      usection_status = #{record.usectionStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Course">
    update muke_user_course_section
    <set>
      <if test="usectionUid != null">
        usection_uid = #{usectionUid,jdbcType=INTEGER},
      </if>
      <if test="usectionMvid != null">
        usection_mvid = #{usectionMvid,jdbcType=INTEGER},
      </if>
      <if test="usectionSectionid != null">
        usection_sectionid = #{usectionSectionid,jdbcType=INTEGER},
      </if>
      <if test="usectionStatus != null">
        usection_status = #{usectionStatus,jdbcType=INTEGER},
      </if>
    </set>
    where usection_id = #{usectionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Course">
    update muke_user_course_section
    set usection_uid = #{usectionUid,jdbcType=INTEGER},
      usection_mvid = #{usectionMvid,jdbcType=INTEGER},
      usection_sectionid = #{usectionSectionid,jdbcType=INTEGER},
      usection_status = #{usectionStatus,jdbcType=INTEGER}
    where usection_id = #{usectionId,jdbcType=INTEGER}
  </update>
</mapper>