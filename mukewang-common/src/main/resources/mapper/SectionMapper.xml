<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.SectionMapper">
  <resultMap id="BaseResultMap" type="com.entity.Section">
    <id column="section_id" jdbcType="INTEGER" property="sectionId" />
    <result column="section_onsale" jdbcType="INTEGER" property="sectionOnsale" />
    <result column="section_title" jdbcType="VARCHAR" property="sectionTitle" />
    <result column="section_intro" jdbcType="VARCHAR" property="sectionIntro" />
    <result column="section_mv" jdbcType="INTEGER" property="sectionMv" />
    <collection property="mvinfos" ofType="com.entity.Mvinfo" select="com.dao.MvinfoMapper.selectBySection" column="section_id"></collection>
    <collection property="comments" column="section_id" select="com.dao.CommentMapper.selectById"  ofType="Comment" javaType="java.util.List">
      <id column="comment_id" jdbcType="INTEGER" property="commentId" />
      <result column="comment_uid" jdbcType="INTEGER" property="commentUid" />
      <result column="comment_uname" jdbcType="VARCHAR" property="commentUname" />
      <result column="comment_touid" jdbcType="INTEGER" property="commentTouid" />
      <result column="comment_touname" jdbcType="VARCHAR" property="commentTouname" />
      <result column="comment_mvid" jdbcType="INTEGER" property="commentMvid" />
      <result column="comment_sectionid" jdbcType="INTEGER" property="commentSectionid" />
      <result column="comment_sectiontitle" jdbcType="VARCHAR" property="commentSectiontitle" />
      <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
      <result column="comment_number" jdbcType="INTEGER" property="commentNumber" />
      <result column="comment_type" jdbcType="INTEGER" property="commentType" />
    </collection>

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    section_id, section_onsale, section_title, section_intro, section_mv
  </sql>
  <select id="selectByExample" parameterType="com.entity.SectionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from muke_section
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from muke_section
    where section_id = #{sectionId,jdbcType=INTEGER}
  </select>

  <select id="selectByMvid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from muke_section
    where section_mv = #{mvid,jdbcType=INTEGER}
  </select>

  <select id="selectAllSection" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from muke_section
    where section_mv = #{param1,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from muke_section
    where section_id = #{sectionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.entity.SectionExample">
    delete from muke_section
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.entity.Section">
    insert into muke_section (section_id, section_onsale, section_title, 
      section_intro, section_mv)
    values (#{sectionId,jdbcType=INTEGER}, #{sectionOnsale,jdbcType=INTEGER}, #{sectionTitle,jdbcType=VARCHAR}, 
      #{sectionIntro,jdbcType=VARCHAR}, #{sectionMv,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Section">
    insert into muke_section
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sectionId != null">
        section_id,
      </if>
      <if test="sectionOnsale != null">
        section_onsale,
      </if>
      <if test="sectionTitle != null">
        section_title,
      </if>
      <if test="sectionIntro != null">
        section_intro,
      </if>
      <if test="sectionMv != null">
        section_mv,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sectionId != null">
        #{sectionId,jdbcType=INTEGER},
      </if>
      <if test="sectionOnsale != null">
        #{sectionOnsale,jdbcType=INTEGER},
      </if>
      <if test="sectionTitle != null">
        #{sectionTitle,jdbcType=VARCHAR},
      </if>
      <if test="sectionIntro != null">
        #{sectionIntro,jdbcType=VARCHAR},
      </if>
      <if test="sectionMv != null">
        #{sectionMv,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.entity.SectionExample" resultType="java.lang.Long">
    select count(*) from muke_section
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update muke_section
    <set>
      <if test="record.sectionId != null">
        section_id = #{record.sectionId,jdbcType=INTEGER},
      </if>
      <if test="record.sectionOnsale != null">
        section_onsale = #{record.sectionOnsale,jdbcType=INTEGER},
      </if>
      <if test="record.sectionTitle != null">
        section_title = #{record.sectionTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.sectionIntro != null">
        section_intro = #{record.sectionIntro,jdbcType=VARCHAR},
      </if>
      <if test="record.sectionMv != null">
        section_mv = #{record.sectionMv,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update muke_section
    set section_id = #{record.sectionId,jdbcType=INTEGER},
      section_onsale = #{record.sectionOnsale,jdbcType=INTEGER},
      section_title = #{record.sectionTitle,jdbcType=VARCHAR},
      section_intro = #{record.sectionIntro,jdbcType=VARCHAR},
      section_mv = #{record.sectionMv,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Section">
    update muke_section
    <set>
      <if test="sectionOnsale != null">
        section_onsale = #{sectionOnsale,jdbcType=INTEGER},
      </if>
      <if test="sectionTitle != null">
        section_title = #{sectionTitle,jdbcType=VARCHAR},
      </if>
      <if test="sectionIntro != null">
        section_intro = #{sectionIntro,jdbcType=VARCHAR},
      </if>
      <if test="sectionMv != null">
        section_mv = #{sectionMv,jdbcType=INTEGER},
      </if>
    </set>
    where section_id = #{sectionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Section">
    update muke_section
    set section_onsale = #{sectionOnsale,jdbcType=INTEGER},
      section_title = #{sectionTitle,jdbcType=VARCHAR},
      section_intro = #{sectionIntro,jdbcType=VARCHAR},
      section_mv = #{sectionMv,jdbcType=INTEGER}
    where section_id = #{sectionId,jdbcType=INTEGER}
  </update>
</mapper>